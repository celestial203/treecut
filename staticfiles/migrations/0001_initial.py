# Generated by Django 5.1.6 on 2025-03-06 02:30

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chainsaw',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('region', models.CharField(max_length=50)),
                ('penro', models.CharField(max_length=100)),
                ('cenro', models.CharField(max_length=100)),
                ('province', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=200)),
                ('municipality', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('serial_number', models.CharField(max_length=100)),
                ('purpose', models.CharField(choices=[('CUTTING IN PRIVATE PLANTATION FOR COMMERCIAL USE', 'CUTTING IN PRIVATE PLANTATION FOR COMMERCIAL USE'), ('CUTTING IN TENURE AREA FOR PERSONAL/NON COMMERCIAL USE', 'CUTTING IN TENURE AREA FOR PERSONAL/NON COMMERCIAL USE')], max_length=100)),
                ('date_acquired', models.DateField(blank=True, null=True)),
                ('cert_reg_number', models.CharField(max_length=100)),
                ('color', models.CharField(max_length=50)),
                ('registration_status', models.CharField(choices=[('RENEWED', 'RENEWED'), ('FOR RENEWAL', 'FOR RENEWAL'), ('EXPIRED', 'EXPIRED')], max_length=50)),
                ('date_renewal', models.DateField(blank=True, null=True)),
                ('horse_power', models.CharField(max_length=50)),
                ('guidebar_length', models.CharField(max_length=50)),
                ('denr_sticker', models.CharField(max_length=100)),
                ('ctpo_number', models.CharField(max_length=100)),
                ('date_issued', models.DateField()),
                ('expiry_date', models.DateField()),
                ('file', models.FileField(blank=True, null=True, upload_to='chainsaw_files/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CuttingPermit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Latitude coordinates (e.g. 10.123456)', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Longitude coordinates (e.g. 123.456789)', max_digits=9, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='Name of the wood processing plant', max_length=200)),
                ('type', models.CharField(choices=[('Resawmill-new', 'Resawmill-new'), ('Resawmill-renew', 'Resawmill-renew')], max_length=50)),
                ('wpp_number', models.CharField(default='', help_text='WPP registration number', max_length=100)),
                ('integrated', models.CharField(blank=True, max_length=100, null=True)),
                ('business', models.CharField(default='', help_text='Business name', max_length=200)),
                ('plant', models.CharField(default='', help_text='Plant location/address', max_length=200)),
                ('drc', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='DRC in cubic meters', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('alr', models.DecimalField(blank=True, decimal_places=2, help_text='ALR in cubic meters', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('supplier_info', models.CharField(blank=True, help_text='Location/Address of supplier', max_length=500, null=True)),
                ('local_volume', models.DecimalField(decimal_places=3, default=Decimal('0.000'), help_text='Local volume in cubic meters', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))])),
                ('imported_volume', models.DecimalField(decimal_places=3, default=Decimal('0.000'), help_text='Imported volume in cubic meters', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.000'))])),
                ('area', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Area in hectares', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('date_issued', models.DateField(default=django.utils.timezone.now)),
                ('date_released', models.DateField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('approved_by', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('wood_status', models.CharField(choices=[('ACTIVE_NEW', 'Active (New)'), ('ACTIVE_RENEWED', 'Active (Renewed)'), ('EXPIRED', 'Expired'), ('SUSPENDED', 'Suspended'), ('CANCELLED', 'Cancelled')], default='ACTIVE_NEW', max_length=20)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='wood_files/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Wood Processing Plant',
                'verbose_name_plural': 'Wood Processing Plants',
                'ordering': ['-date_issued'],
            },
        ),
        migrations.CreateModel(
            name='Cutting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permit_type', models.CharField(choices=[('TCP', 'TCP'), ('STCP', 'STCP'), ('PLTP', 'PLTP'), ('SPLTP', 'SPLTP')], default='TCP', max_length=5)),
                ('permit_number', models.CharField(help_text='Permit identification number', max_length=20)),
                ('permittee', models.CharField(max_length=100)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('tct_oct_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='TCT/OCT No.')),
                ('tax_dec_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tax Declaration No.')),
                ('lot_no', models.CharField(blank=True, max_length=100, null=True, verbose_name='Lot No.')),
                ('area', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Area (ha.)')),
                ('no_of_trees', models.IntegerField(blank=True, null=True, verbose_name='Number of Trees')),
                ('species', models.TextField(help_text='For PLTP, separate multiple species with commas')),
                ('permit_file', models.FileField(blank=True, help_text='Upload permit document', null=True, upload_to='permits/')),
                ('total_volume_granted', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total Volume Granted (cu.m.)')),
                ('gross_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('net_volume', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=10, null=True)),
                ('date_issued', models.DateField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateField(editable=False)),
                ('rep_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='Representative')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('situation', models.CharField(choices=[('Good', 'Good'), ('Pending', 'Pending'), ('Active', 'Active'), ('Expired', 'Expired')], default='Pending', max_length=50, verbose_name='Situation')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Latitude coordinates (e.g. 10.123456)', max_digits=9, null=True, validators=[django.core.validators.MaxValueValidator(999.999999)])),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Longitude coordinates (e.g. 123.456789)', max_digits=9, null=True, validators=[django.core.validators.MaxValueValidator(999.999999)])),
            ],
            options={
                'ordering': ['-date_issued'],
                'unique_together': {('permit_type', 'permit_number')},
            },
        ),
        migrations.CreateModel(
            name='CuttingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('volume_type', models.CharField(choices=[('Initial', 'Initial'), ('Additional', 'Additional')], default='Initial', max_length=20)),
                ('species', models.CharField(choices=[('Molave', 'Molave'), ('Sawn Lumber', 'Sawn Lumber'), ('Fuel Wood', 'Fuel Wood'), ('Yemane', 'Yemane'), ('Mahogany', 'Mahogany'), ('Narra', 'Narra'), ('Minepoles', 'Minepoles')], default='Molave', max_length=100)),
                ('volume', models.DecimalField(decimal_places=2, max_digits=10)),
                ('calculated_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remaining_balance', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=10, null=True)),
                ('number_of_trees', models.IntegerField()),
                ('remarks', models.TextField(blank=True, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('parent_tcp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cutting_records', to='base.cutting')),
            ],
            options={
                'ordering': ['-date_added'],
            },
        ),
        migrations.CreateModel(
            name='Lumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(max_length=50)),
                ('trade_name', models.CharField(max_length=200)),
                ('manager_owner', models.CharField(max_length=200)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, default='', max_length=10)),
                ('brgy', models.CharField(blank=True, default='', max_length=100)),
                ('municipality', models.CharField(blank=True, default='', max_length=100)),
                ('province', models.CharField(blank=True, default='', max_length=100)),
                ('source_supplier', models.CharField(blank=True, default='', max_length=200)),
                ('permit_no', models.CharField(max_length=100)),
                ('date_issued', models.DateField()),
                ('expiry_date', models.DateField()),
                ('volume_cubic_meter', models.DecimalField(decimal_places=2, max_digits=10)),
                ('species', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='lumber_files/')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VolumeRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('species', models.CharField(max_length=100)),
                ('number_of_trees', models.IntegerField()),
                ('volume', models.DecimalField(decimal_places=2, max_digits=10)),
                ('calculated_volume', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remaining_balance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='volume_records/')),
                ('cutting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volume_records', to='base.cutting')),
            ],
            options={
                'db_table': 'base_volumerecord',
                'ordering': ['-date_added'],
            },
        ),
    ]
